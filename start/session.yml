name: simulation
root: ./
startup_window: manipulator_controller
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=t650; export WORLD_NAME=simulation
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_simulation simulation.launch world_name:=grass_plane gui:=true
          #- waitForOdometry; gz camera -c gzclient_camera -f uav1; history -s gz camera -c gzclient_camera -f uav1
  - status:
      layout: tiled
      panes:
        - waitForSimulation; roslaunch mrs_uav_status status.launch
  - spawn:
      layout: tiled
      panes:
        - waitForSimulation; spawn_uav 1 --$UAV_TYPE --run --delete --enable-rangefinder --enable-mrs-manipulator
  - control:
      layout: tiled
      panes:
        - waitForOdometry; roslaunch mrs_uav_general core.launch
  - takeoff:
      layout: tiled
      panes:
        - waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - 'waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
  - manipulator_controller:
      layout: tiled
      panes:
        - waitForSimulation; roslaunch mrs_manipulator manipulator_controller.launch
  # - rviz:
  #     layout: tiled
  #     panes:
  #       - waitForControl; roslaunch mrs_uav_testing rviz.launch
  #       - waitForControl; roslaunch mrs_rviz_plugins load_robot.launch
  # - layout:
  #     layout: tiled
  #     panes:
  #       - waitForControl; sleep 3; ~/.i3/layout_manager.sh ./layout.json
